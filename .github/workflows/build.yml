name: Build

env:
  PROJECT_NAME: "ChangeMe"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: "${{ matrix.variants.os }}/${{ matrix.variants.arch }}/${{ matrix.variants.config }}"
    env:
      CMAKE_FLAGS: '-DPWN_BUILD_DOCS=OFF -DPWN_DISASSEMBLE_X86=ON -DPWN_DISASSEMBLE_ARM64=ON -DPWN_BUILD_TOOLKIT=ON -DPWN_BUILD_TESTING=ON'
      NB_CPU: 1
      VERBOSE: 1

    strategy:
      fail-fast: false
      matrix:
        variants:
          - {os: windows-2022,   arch: x64,      config: RelWithDebInfo}
          - {os: windows-2022,   arch: win32,    config: RelWithDebInfo}
          - {os: windows-2022,   arch: arm64,    config: RelWithDebInfo}
          - {os: windows-2022,   arch: arm,      config: RelWithDebInfo}
          # - {os: ubuntu-2204,    arch: x64,      config: RelWithDebInfo} # runner fails for some reason, works fine locally: see https://github.com/actions/runner-images/discussions/7188
          # - {os: ubuntu-2204,    arch: x86,      config: RelWithDebInfo}
          # - {os: ubuntu-2404,    arch: x64,      config: RelWithDebInfo}
          # - {os: ubuntu-2404,    arch: x86,      config: RelWithDebInfo}          

    runs-on: ${{ matrix.variants.os }}
    steps:
    - uses: actions/checkout@v4
    - if: startsWith(matrix.variants.os, 'windows-')
      shell: pwsh
      run: |
        echo "NB_CPU=$env:NUMBER_OF_PROCESSORS" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        Import-Module .\.github\Invoke-VisualStudio.ps1
        Invoke-VisualStudio2022${{ matrix.variants.arch }}
    - if: startsWith(matrix.variants.os, 'ubuntu-')
      run: |
        sudo apt remove llvm-* clang-* python3-lldb-* libunwind-* libc++abi1-* libc++1-*
        wget -O /tmp/llvm.sh https://apt.llvm.org/llvm.sh; chmod +x /tmp/llvm.sh ; sudo /tmp/llvm.sh 17
        sudo apt update && sudo apt install -y cmake doxygen clang-17 libc++abi-17-dev libc++-17-dev llvm-17-dev nasm
        echo "NB_CPU=$(grep -c ^processor /proc/cpuinfo)" >> $GITHUB_ENV
        echo "CC=clang-17" >> $GITHUB_ENV
        echo "CXX=clang++-17" >> $GITHUB_ENV
    - run: mkdir artifact
    - if: startsWith(matrix.variants.os, 'windows-')
      shell: pwsh
      run: choco install gnuwin32-m4
      # run: winget install gnuwin32-m4
    - if: startsWith(matrix.variants.os, 'windows-')
      run: cmake -S . -B ./build -A ${{ matrix.variants.arch }} ${{ env.CMAKE_FLAGS }}
    - if: startsWith(matrix.variants.os, 'ubuntu-')
      run: cmake -S . -B ./build ${{ env.CMAKE_FLAGS }}
    - run:  cmake --build ./build --parallel ${{ env.NB_CPU }} --config ${{ matrix.variants.config }}
    - run: cmake --install ./build --config ${{ matrix.variants.config }} --prefix ./artifact --verbose
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}_${{ matrix.variants.arch }}_${{ matrix.variants.os }}_${{ matrix.variants.config }}_${{ github.sha }}_${{ matrix.variants.build }}
        path: artifact/

